Word,Definition
SDLC,"Software Development LifeCycle - Describes the complete journey of software development from the initial idea through all stages leading to a production deployment and maintenance of the changes. It is described as a lifecycle as the process is considered cyclical in nature and is often presented in a cicular format, much like a lifecycle diagram in biology."
Deploy,"To add code changes available on an environment. In software terms, deploying code would change the version of code running on an environment. When talking about IAC (Infrastructure as Code), deploying would update the infrastructure to match that required by the new code."
Release,"To make code changes available to the end user of an environment. Releasing code is a separate, independent step from deployment, although they are fundamentally linked. Deploying code changes may make them available to an end user. However, it is possible for code changes to be deployed and not available to an end user until further steps are taken, such as enabling a feature toggle. In this case you would consider the code released only at the point the toggle was enabled."
IAC,"Infrastructure as Code. A process of managing and provisioning cloud basedn infrastructure through machine-readable definition files. IAC allows for versioning, code review, and repeatable deployments of infrastructure."
Feature Toggle,"Also known as Feature Flags, they provide a software driven way to enable or disable features. They can be a simple on/off switch, but can also be more complex and serve changes to specific traffic types or volumes."
Environment,"Refers the the infrastructure that software is run on."
Infrastructure,"The combined tools, processes, hardware, networking and platform that software is run on."
BDD,"Behaviour Driven Development. A test driven development principle that is related to TDD. BDD states for each unit of software a developer must define a test first, then implement the code to make the test pass. BDD encourages the collaboration of Business Analysts / Product owners and developers to create the specific user stories. BDD uses Gherkin like syntax for creation of user stories."
TDD,"Test Driven Development. A development practice that encourages developers to create unit tests before implementing code. TDD can help improve requirement clariity, quality of code documentation, and ensures comprehensive test coverage."
DDD,"Domain Driven Design. A software design approached that focusses on modelling software to match a domain according to imput from the domains experts."
Test Pyramid,"References a type of diagram that is designed to show the different quantity of tests in layers of a pyramid. The top layer, often UI or end to end tests, having less tests than the lower layers, such as Integration Tests and Unit Tests"
Unit Tests,"Code level testing that checks the input and output of a given function or method."
Integration tests,"Testing the interfaces between software modules with an aim to expose defects that occur due to the integration of the modules."
End to end tests,"The testing of an application in full as per a live production system. The closest representation of an end user experience of the applicaiton."
E2E,"End to end. Normally used to describe completing process from start to finish."
Quality,"Quality is “goodness” and “correctness” (just because something is ‘correct’, it doesn't necessarily mean it's ‘good’); it's the value that a customer or user feels while using the product or service, and it is entirely unique to that customer."
Gherkin,"Gherkin is a language used to create non-technical and human readable test cases."
Extreme Programming,"Also known as XP. XP is a software development practice intended to improve software qualtiy and responsiveness to changing customer requirements."
Clean Code,"An approach to writing code that is focussed on writing clear, comprehensible, traceable, and logical code. It's goal is produce software that is easy to read and maintain."
DRY,"Don't Repeat Yourself. A principle of software development aimed at reduced the repetition in code. It's aim is to improve the maintainability of code."
WET,"Write Every Time. The opposite of DRY code, where the same code is repeated in multiple places throughout the codebase."
SOLID,"A mnenomic acronym for five design principles intended to make object-oriented desgins more understandable. Single-responsibility principle, Open-closed principle, Liskov substituion principle, Interface segregation principle, Dependency inversion principle."
Object-oriented,"Object-oriented programming is a programming paradigm based on the concept of objects, which can contain data and code: data in the form of fields, and code in the form of procedures. In OOP, computer programs are designed by making them out of objects that interact with one another."
Single-responsibility principle,"A programming principle that states a module should be responible to one, and only one, actor. In practice this means that each module should be decoupled and have only one responsibility."
Open-closed principle,"The open–closed principle (OCP) states “software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification”. A module will be said to be open if it is still available for extension. For example, it should be possible to add fields to the data structures it contains, or new elements to the set of functions it performs. A module will be said to be closed if [it] is available for use by other modules."
Liskov substituion principle,"Is based on the concept of “substitutability” – a principle in object-oriented programming stating that an object (such as a class) may be replaced by a sub-object (such as a class that extends the first class) without breaking the program."
Interface segregation principle,"States that no code should be forced to depend on methods it does not use."
Dependency inversion principle,"A specific methodology for loosely coupled software modules. When following this principle, the conventional dependency relationships established from high-level, policy-setting modules to low-level, dependency modules are reversed, thus rendering high-level modules independent of the low-level module implementation details."
IDE,"Integrated Development Environment. A software application that provides developer tools to support software development. Common exambles are Visual Studio, Eclipse, Intellij IDEA"
Regression,"A type of software bug or defect where a feature that was working stops working."
Bug,"A term used to describe an error, flaw, fault, or defect in the operation of a software."
Zero Bug Policy,"An approach to software quality intended to reduce the number of defects in a production system. The process redefines what is considered a bug and priortises fixes accordingly. It is designed to ensure that the most serious issues are addressed quickly."
CI,"Continuous Integration. A process in software engeering in which incremental code changes are made frequently and reliably, often with various forms of automated testing as part of a pipeline."
CD,"Continuous Deployment. A process in software engineering in which incremental code changes are frequently and reliably deployed to production."
Pipeline,"The process through which code goes from a change request to production. Often includes various builds and automated testing."
Pull Request,"Also known as a PR, Merge Request, MR etc. It is a request from a developer for their code changes to be merged into another code branch."
Branch,"Branches are copies of code use to isolate development work without affecting the main branch or work being done by others. Once the work is completed and approved, it can be merged into the main branch."
Source Control,"Source control, or Version control, is a system used to track and manage changes to code."
Git,"An open source version control system. Popular commerical implementations of Git include GitHub and GitLab"